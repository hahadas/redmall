<template>
	<div>
		<div class="tabs">
			<div class="tab" v-for="(tab, i) in tabs" :key="i" @click="tabsChange(i)">
				<text class="tab-name" :class="{'tab-name-active' : current === i}">{{tab}}</text>
			</div>
		</div>
		<list :style="{height: swiperHeight + 'px'}" style="width: 750rpx;">
			<cell v-if="current === 0">
				<div class="pad">
					<div class="title">
						<div class="title-left">
							<image :src="staticUrl + 'video/notice.png'" class="title-left-icon"></image>
							<text class="title-left-txt">发布状态</text>
						</div>
					</div>
					<radio-group @change="RadioChange">
						<label class="radio-label">
							<radio color="#381895" class='radio' :class="videoDate.status=='0'?'checked':''" :checked="videoDate.status=='0'?true:false" value="0" />
							<text class="radio-txt">公开，所有人可观看</text>	
						</label>
						<label class="radio-label">
							<radio color="#381895" class='rradio' :class="videoDate.status=='1'?'checked':''" :checked="videoDate.status=='1'?true:false" value="1" />
							<text class="radio-txt">私密，只可自己观看</text>	
						</label>
					</radio-group>
				</div>
				<div class="pad">
					<div class="title">
						<div class="title-left">
							<image :src="staticUrl + 'video/describe.png'" class="title-left-icon"></image>
							<text class="title-left-txt">视频描述</text>
						</div>
						<text class="title-left-txt">{{videoDate.note.length}}/50</text>
					</div>
					<textarea class="pad-textarea" :adjust-position="false" :maxlength="50" placeholder="请输入视频描述" :value="videoDate.note"></textarea>
				</div>
				<div class="pad">
					<div class="title">
						<div class="title-left">
							<image :src="staticUrl + 'video/camera.png'" class="title-left-icon"></image>
							<text class="title-left-txt">选择视频(视频大小不超过{{videoSize}}M)</text>
						</div>
					</div>
					<view class="pad-box">
						<div v-if="videoDate.url && videoDate.url.trim() != ''">
							<view class="bg-img" @click="viewVideo(videoDate.url)">
								<image :src="videoDate.imageOssUrl" mode="widthFix" style="width: 710rpx;" :style="{height:videoHeight+'px'}"></image>
								<image :src="staticUrl + 'video/play.png'" class="bg-img-icon"></image>
							</view>
							<button class="redBtn" @tap.stop="ChooseVideo()">
								<text class="redBtn-txt">重新选择视频</text>
							</button>
						</div>
						<div class="solids" v-if="!videoDate.url || videoDate.url.trim() == ''">
							<image :src="staticUrl + 'video/camera.png'" class="solids-icon" @tap="ChooseVideo"></image>
						</div>
					</view>
					<button class="bg" type="primary" @click="sendVideo">{{videoBtnTitle}}</button>
				</div>
				<div style="height: 300rpx;"></div>
			</cell>
			<cell v-if="current === 1" class="main">
				<textarea v-model="textarea" placeholder="这一刻的想法..." class="textarea" />
				<div class="list">
					<view class="list-add" v-for="(item, i) in list" :key="i">
						<image :src="item" mode="" class="list-img" @tap="previewImg(item, i)"></image>
						<icon type="clear" color="#fa2d43" size="18" class="list-del" @tap="onDel(i)" />
					</view>
					<div class="list-add-box" v-if="list.length < 9" @tap="onAdd">
						<image class="list-add-icon" :src="staticUrl + 'video/add.png'" mode=""></image>
					</div>
				</div>
				<div class="position">
					<text class="position-name">是否显示位置</text>
					<switch color="#381895" :checked="position" @change="switchChange" style="transform:scale(0.9)"/>
				</div>
				<button class="btn" type="primary" :loading="loading" :disabled="loading" @tap="onSave">发表</button>
				<div style="height: 300rpx;"></div>
			</cell>
		</list>
	</div>
</template>

<script>
	import { sendRequest } from "@/common/http/api.js"
	import url from '@/common/http/url.js';
	import publics from "@/common/utils/public.js"
	import upload from "@/common/http/upload.js"
	import { pathToBase64, base64ToPath } from '@/js_sdk/gsq-image-tools/image-tools/index.js'
	const crop = uni.requireNativePlugin("Html5app-VideoCrop");
	export default {
		data(){
			return {
				staticUrl: this.$staticUrl,
				swiperHeight: uni.getSystemInfoSync().windowHeight,
				tabs: ["发布视频", "发布动态"],
				current: 0,
				// 发布
				videoBtnTitle:'发布视频',
				videoHeight:'200',
				videoSize:50,
				videoType:{
					store:false,
					product:false,
					dkUser:false
				},
				videoDate:{
					id:0,
					note:'',
					duration:0,
					url:'',
					imageUrl:'',
					imageOssUrl:'',
					videoData:{cursorId:-1},
					imageData:{cursorId:-1},
					lng:'',
					lat:'',
					userType:0,
					productId:null,
					status:0
				},
				// 发布动态
				textarea: "",
				list: [],
				position: true,
				loading: false
			}
		},
		mounted() {
			let systemInfo = uni.getSystemInfoSync();
			let windowWidth = systemInfo.windowWidth-60;//预算视频宽度
			let autoHeight = (windowWidth/3)*5;//采用比例为5:3
			this.videoHeight = parseInt(autoHeight);//取整
			//获取视频编辑信息
			this.videoInitConfig();
			//判断是否设置地址
			let _this = this;
			let addressLngLat = publics.getMyaddressLngLat();
			if(addressLngLat){
				//设置地址
				let myAddressData = JSON.parse(addressLngLat);
				_this.videoDate.lng = myAddressData.longitude;
				_this.videoDate.lat = myAddressData.latitude;
			// }else{
			// 	this.showToast("请先设置您当前的位置");
			// 	setTimeout(function(){
			// 		_this.openMap();
			// 	},500);
			}
		},
		methods:{
			async videoInitConfig(){
				let that = this;
				let res = await sendRequest('get', url.interaction.videoConfig, {videoId:this.videoDate.id});
				let data = res.data
				console.log("........videoConfig........", data)
				that.videoSize = data.videoSize;
				
				that.videoType.store = data.store;
				that.videoType.product = data.product;
				that.videoType.dkUser = data.dkUser;
				
				if(that.videoDate.id && data.videoData){
					let videoData = data.videoData;
					that.videoDate.note = videoData.note;
					that.videoDate.duration = videoData.duration;
					that.videoDate.url = videoData.video;
					that.videoDate.imageUrl = videoData.image;
					that.videoDate.imageOssUrl = videoData.image;
					that.videoDate.videoData = {cursorId:0};
					that.videoDate.imageData = {cursorId:0};
					that.videoDate.lng = videoData.lng;
					that.videoDate.lat = videoData.lat;
					that.videoDate.userType = videoData.userType;
					that.videoDate.status = videoData.status;
					if(videoData.videoUrl){
						that.videoDate.productId = videoData.videoUrl.split("id=")[1];
					}
				}
			},
			videoCrop(){
				let that = this;
				publics.jiuYinVideoCrop(this.videoDate.url,res => {
					if(res){
						that.videoDate.url = res.mp4;
						that.videoDate.imageUrl = res.image;
					}
				});
			},
			select(){
				//打开视频选择
				const _this=this;
				plus.gallery.pick(function(e){
				   _this.setPath(e.files[0]);
				}, function (e){
						
				},{filter:"video",multiple:true,maximum:1,system:false,onmaxed:function(){
						
				}});
			},
			setPath:function(url){
			   console.log(url);
			   const that=this;
				crop.openCrop({
				"url":url,
				"resolution":"480p", //分辨率
				"mode":"fill", //视频模式，填充、裁剪SCALE
				"quality":"sd", // 高度质量
				"ratio":"9/16", //视频比例
				"mintime":2000, //限制最小时间
				"codecs":2,//编码方式
				"gop":"5",
				"fps":"25"
				},res=>{
					console.log(JSON.stringify(res));
					
					that.videoDate.url = 'file://'+res.mp4;
					that.videoDate.duration = res.duration;
					if(res.image.indexOf("?t=") != -1){
						res.image = res.image.split("?t=")[0];
					}
					that.videoDate.imageUrl = 'file://'+res.image;
					
					console.log(JSON.stringify(res));
					
					that.uploadImageByUrl(that.videoDate.imageUrl);
				});
			},
			viewVideo(url){
				uni.setStorageSync('sendVideoUrl', url)
				uni.navigateTo({
					url: "../user/setting/video?sendVideo=true"
				})
			},
			ChooseVideo() {
				let that = this;
				let itemList = ['从手机相册选择', '相机拍摄']
				let systemInfo = uni.getSystemInfoSync()
				let brand = systemInfo.brand
				console.log("--------当前手机品牌：", brand)
				if (brand.indexOf('HUAWEI')>-1) {
					itemList = ['从手机相册选择']
				}
				uni.showActionSheet({
				    itemList: itemList,
				    success: function (res) {
						if(res.tapIndex == 0){//从手机相册选择
							that.chooseVideoByType("album");
						}else{//相机拍摄
							that.chooseVideoByType("camera");
						}
				    },
				    fail: function (res) {
				        console.log(res.errMsg);
				    }
				});
			},
			chooseVideoByType(type){
				let that = this;
				this.videoDate.url = '';
				this.videoDate.imageUrl = '';
				this.videoDate.imageOssUrl = '';
				publics.uploadJiuYinVideo(this.videoSize,type,res => {
					console.log("-------> ", res)
					if(res){
						//去除后面时间戳
						if(res.mp4.indexOf("?t=") != -1){
							res.mp4 = res.mp4.split("?t=")[0];
						}
						// if(res.image.indexOf("?t=") != -1){
						// 	res.image = res.image.split("?t=")[0];
						// }
						//判断第一个字符是否存在file://
						if(res.mp4.indexOf("file://") == -1){
							res.mp4 = 'file://'+res.mp4;
						}
						if(res.image.indexOf("file://") == -1){
							res.image = 'file://'+res.image;
						}
						console.log("-------> ", res)
						that.videoDate.url = res.mp4;
						that.videoDate.duration = res.duration;
						that.videoDate.imageUrl = res.image;
						that.videoDate.imageOssUrl = res.image
						console.log('111111111111111111111111111111111111')
						this.$forceUpdate()
						// that.uploadImageByUrl(that.videoDate.imageUrl);
					}
				});
			},
			async uploadImageByUrl(url) {
				let that = this;
				uni.showLoading({
					title: '视频解析中...'
				});
				let urls = url.split(".");
				let fileType = urls[urls.length-1];
				let res = await sendRequest("GET", "single/home/policy", {type: 0, fileType:fileType})
				let data = res.data
				data.filePath = url;
				that.videoDate.imageData = data;
				upload.uploadImageOss([data]).then(doc =>{
					if (doc) {
						uni.hideLoading();
						that.videoDate.imageOssUrl = that.videoDate.imageData.fileUrl;
					}
				})
			},
			async sendVideo(){
				let that = this;
				uni.showLoading({
					title: '视频发布中...'
				});
				if(this.videoDate.videoData && this.videoDate.videoData.cursorId == 0){
					uni.hideLoading();
					this.saveVideo();//直接保存
					return;
				}
				let url = this.videoDate.url;
				let urls = url.split(".");
				let fileType = urls[urls.length-1];
				
				let res = await sendRequest("GET", "single/home/policy", {type: 1, fileType:fileType})
				let data = res.data
				data.filePath = url;
				that.videoDate.videoData = data;
				console.log("上传视频。。。。。", data)
				upload.uploadImageOss([data]).then(doc =>{
					if (doc) {
						uni.hideLoading();
						that.saveVideo();
					}
				})
			},
			async saveVideo(){
				let that = this;
				if(!this.videoDate.videoData || this.videoDate.videoData.cursorId == -1){
					this.showToast("获取不到视频信息,请您重新上传视频");
					return;
				}
				if(!this.videoDate.note || this.videoDate.note.trim().length <= 0 || this.videoDate.note.trim().length > 50){
					uni.hideLoading();
					this.showToast("请您填写视频描述");
					return true;
				}
				if(!this.videoDate.productId){
					this.videoDate.productId = 0;
				}
				if(!this.videoDate.duration){
					this.videoDate.duration = 0;
				}
				let paret = {
					id:this.videoDate.id,
					lng:this.videoDate.lng,
					lat:this.videoDate.lat,
					userType:this.videoDate.userType,
					productId:this.videoDate.productId,
					status:this.videoDate.status,
					note:this.videoDate.note,
					// imageId:this.videoDate.imageData.cursorId,
					videoId:this.videoDate.videoData.cursorId,
					duration:this.videoDate.duration
				};
				
				let res = await sendRequest('post', url.interaction.saveOrUpdateVideo, paret);
				let data = res.data
				uni.hideLoading();
				if(data){
					if(data.trim() == "411"){
						this.showToast("请先设置您当前的位置");
						setTimeout(function(){
							that.openMap();
						},1500);
					}else{
						if(that.videoDate.id != 0){
							this.showToast("修改成功");
						}else{
							this.showToast("发布成功");
						}
						this.videoDate.note = ""
						that.videoDate.url = null;
						that.videoDate.duration = null;
						that.videoDate.imageUrl = null;
						that.videoDate.imageOssUrl = null
						that.$forceUpdate()
					}
				}
			},
			ViewVideo(index) {
				let url = this.imgVideoList[index].url;
				this.showModal('VideoShow');
			},
			showModal(e) {
				this.modalName = e;
			},
			hideModal(e) {
				this.modalName = null;
			},
			RadioChange(e) {
				this.videoDate.status = parseInt(e.detail.value);
			},
			RadioChangeByUserType(e) {
				this.videoDate.userType = parseInt(e.detail.value);
			},
			openMap(){
				let _this = this;
				uni.chooseLocation({
					keyword: "",
					success: function(res) {
						_this.videoDate.lng = res.longitude;
						_this.videoDate.lat = res.latitude;
						publics.setMyaddressLngLat(JSON.stringify(res));
					}
				});
			},
			onSave(){
				let that = this
				if (!this.textarea) return this.showToast('输入不能为空');
				this.loading = true
				if (this.list.length > 0) {
					this.imgList = []
					this.list.map(v => {
						upload.oldOssUpload(v, res=>{
							that.imgList.push(res.fileUrl)
							if (that.imgList.length === that.list.length) {
								that.onConfirm(that.imgList)
							}
						})
					})
				} else {
					that.onConfirm()
				}
			},
			async onConfirm(imgList){
				let params = {
					comment: this.textarea,
					addStatus: this.position ? 0 : 1,
					images: imgList ? imgList.join(","): ""
				}
				let res = await sendRequest('post', url.interaction.addDynamic, params);
				this.loading = false
				let data = res.data
				if (data) {
					this.showToast('发布成功');
					this.list = []
					this.textarea = ""
				}
			},
			onDel(i){
				this.list.splice(i, 1)
			},
			onAdd(){
				let _this = this
				uni.chooseImage({
				    count: 9 - _this.list.length, //默认9
				    sizeType: ['original', 'compressed'], //可以指定是原图还是压缩图，默认二者都有
				    success: function (res) {
				        _this.list = _this.list.concat(res.tempFilePaths)
				    }
				});
			},
			previewImg(img, index){
				let _this = this
				uni.previewImage({
					urls: _this.list,
					current: index
				});
			},
			switchChange(e) {
				this.position = e.detail.value
			},
			tabsChange(e){
				uni.hideKeyboard()
				this.current = e
			},
			showToast(msg){
				uni.showToast({
					title: msg,
					icon: "none"
				})
			}
		}
	}
</script>

<style scoped>
	.tabs{
		width: 750rpx;
		height: 90rpx;
		flex-direction: row;
		background-color: #FFFFFF;
		margin-bottom: 20rpx;
	}
	.tab{
		width: 375rpx;
		height: 90rpx;
		align-items: center;
		justify-content: center;
		position: relative;
	}
	.tab-name{
		height: 90rpx;
		line-height: 90rpx;
		color: #333333;
		font-size: 30rpx;
		border-bottom-width: 8rpx;
		border-bottom-color: #FFFFFF;
		border-bottom-style: solid;
	}
	.tab-name-active{
		font-weight: bold;
		color: #381895;
		border-bottom-color: #381895;
	}
	/* 发布 */
	.pad{
		width: 750rpx;
		padding: 30rpx 20rpx;
		margin-bottom: 20rpx;
		background-color: #FFFFFF;
	}
	.title{
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
		margin-bottom: 30rpx;
	}
	.title-left{
		flex-direction: row;
		align-items: center;
	}
	.title-left-icon{
		width: 40rpx;
		height: 40rpx;
		margin-right: 10rpx;
	}
	.title-left-txt{
		color: #666666;
		font-size: 32rpx;
	}
	.radio-label{
		flex-direction: row;
		align-items: center;
	}
	.radio{
		margin-bottom: 10rpx;
	}
	.radio-txt{
		margin-left: 10rpx;
		font-size: 30rpx;
	}
	.pad-textarea{
		border-color: #EEEEEE;
		border-width: 2rpx;
		border-style: solid;
		padding-top: 10rpx; 
		padding-left: 10rpx;
		font-size: 30rpx;
	}
	.pad-box{
		border-color: #EEEEEE;
		border-width: 2rpx;
		border-style: solid;
		align-items: center;
		justify-content: center;
		margin-bottom: 50rpx;
	}
	.bg-img{
		position: relative;
		align-items: center;
		justify-content: center;
	}
	.bg-img-icon{
		position: absolute;
		width: 100rpx;
		height: 100rpx;
		left: 300rpx;
		color: #FFFFFF;
	}
	.redBtn{
		width: 350rpx;
		background-color: #e54d42;
		padding: 0 40upx;
		height: 80upx;
		margin-top: 20upx;
		margin-bottom: 20upx;
		margin-left: 180rpx;
	}
	.redBtn-txt{
		font-size: 32upx;
		color: #ffffff;
	}
	.solids{
		height: 700rpx;
		align-items: center;
		justify-content: center;
	}
	.solids-icon{
		width: 70rpx;
		height: 70rpx;
	}
	.bg{
		background-image: linear-gradient(to bottom, #381895, #865afd);
	}
	/* 发布动态 */
	.main{
		padding: 30rpx;
		background-color: white;
	}
	.textarea{
		width: 690rpx;
		height: 200rpx;
		max-height: 400rpx;
	}
	.list{
		flex-direction: row;
		align-items: center;
		flex-wrap: wrap;
	}
	.list-img{
		width: 200rpx;
		height: 200rpx;
	}
	.list-add{
		position: relative;
		height: 220rpx;
		width: 220rpx;
		align-items: center;
		justify-content: center;
	}
	.list-add-box{
		height: 200rpx;
		width: 200rpx;
		background-color: #F8F8F8;
		align-items: center;
		justify-content: center;
	}
	.list-del{
		position: absolute;
		right: 0rpx;
		top: 0rpx;
	}
	.list-add-icon{
		width: 48rpx;
		height: 48rpx;
	}
	.position{
		margin-top: 30rpx;
		flex-direction: row;
		justify-content: space-between;
		align-items: center;
		border-top: 2rpx solid #EEEEEE;
		padding: 20rpx 0;
	}
	.position-name{
		font-size: 32rpx;
	}
	.btn{
		width: 690rpx;
		margin-top: 50rpx;
		background-image: linear-gradient(to bottom, #381895, #865afd);
	}
</style>
